{"version":3,"sources":["variables.tsx","components/GoodList.tsx","App.tsx","components/prepareFunction.tsx","index.tsx"],"names":["SortString","GoodList","goods","map","good","goodsFromServer","App","useState","sortField","setsortField","isReverse","setisReverse","visibleGoods","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","className","onClick","type","cn","currentState","ReactDOM","render","document","getElementById"],"mappings":"6KAaYA,E,mECPCC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDVnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUL,K,oBAAAA,E,iBAAAA,M,gBEJL,IAAMM,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAkB,GAApD,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,ECVD,SACLV,EACAM,EACAE,GAEA,IAAMG,EAAa,YAAOX,GAgB1B,OAdIM,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKR,EAAWiB,SACd,OAAOF,EAAMG,cAAcF,GAE7B,KAAKhB,EAAWmB,OACd,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXV,EACKG,EAAcQ,UAGhBR,EDfcS,CAAiBjB,EAAiBG,EAAWE,GAmBlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QArBoB,WAC1Bf,EAAaT,EAAWiB,WAqBlBQ,KAAK,SACLF,UAAS,yBAAoBG,IAAG,CAC9B,WAAYlB,IAAcR,EAAWiB,YAJzC,iCAUA,wBACEO,QA3BkB,WACxBf,EAAaT,EAAWmB,SA2BlBM,KAAK,SACLF,UAAS,4BAAuBG,IAAG,CACjC,WAAYlB,IAAcR,EAAWmB,UAJzC,4BAUA,wBACEK,QAjCmB,WACzBb,GAAa,SAACgB,GAAD,OAAmBA,MAiC1BF,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAahB,IAJjB,sBAUEF,GAAaE,IACb,wBACEc,QAxCe,WACvBf,EAAa,IACbE,GAAa,IAuCLc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CACErB,MAAOU,QEzEfgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7996519f.chunk.js","sourcesContent":["export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortString {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { GoodList } from './components/GoodList';\nimport { goodsFromServer, SortString } from './variables';\nimport { getPreparedGoods } from './components/prepareFunction';\n\nexport const App: React.FC = () => {\n  const [sortField, setsortField] = useState<string>('');\n  const [isReverse, setisReverse] = useState<boolean>(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  const handlerAlphabetSort = () => {\n    setsortField(SortString.Alphabet);\n  };\n\n  const handlerLengthSort = () => {\n    setsortField(SortString.Length);\n  };\n\n  const handlerReverseSort = () => {\n    setisReverse((currentState) => !currentState);\n  };\n\n  const handlerResetSort = () => {\n    setsortField('');\n    setisReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handlerAlphabetSort}\n          type=\"button\"\n          className={`button is-info ${cn({\n            'is-light': sortField !== SortString.Alphabet,\n          })}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handlerLengthSort}\n          type=\"button\"\n          className={`button is-success ${cn({\n            'is-light': sortField !== SortString.Length,\n          })}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handlerReverseSort}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            onClick={handlerResetSort}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList\n        goods={visibleGoods}\n      />\n    </div>\n  );\n};\n","import { SortString } from '../variables';\n\nexport function getPreparedGoods(\n  goods: string[],\n  sortField: string,\n  isReverse: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortString.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortString.Length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}